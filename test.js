const express = require("express");
const { ethers } = require("ethers");
const app = express();
const config = require("./config.js");
const port = config.port;
const provider = new ethers.providers.JsonRpcProvider(config.rpc);
const wallet = new ethers.Wallet(
    "0x4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d",
    provider
);
const ERC20ABI = require("./ERC20.json");
const ADAI_ADDRESS = "0x028171bCA77440897B824Ca71D1c56caC55b68A3";


async function test(){
    const ADAI = new ethers.Contract(ADAI_ADDRESS, ERC20ABI, wallet);
    console.log((await ADAI.balanceOf(wallet.address)).toString());
    await ADAI.approve(config.FXSWAP_ADDRESS,String(1e18));
    const tx = {
        to : config.FXSWAP_ADDRESS,
        data : "0x06ed9d2e0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000028171bca77440897b824ca71d1c56cac55b68a3000000000000000000000000bcca60bb61934080951369a648fb03df4f96263c0000000000000000000000000000000000000000000000000de0b6b3ae0000000000000000000000000028171bca77440897b824ca71d1c56cac55b68a30000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000e06d76d72db4a9763592f4ae741c662edbe8902c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000028171bca77440897b824ca71d1c56cac55b68a30000000000000000000000006b175474e89094c44da98b954eedeac495271d0f0000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000b3f25e96f34ccd7f21ee58272308513b4e0633e400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000100000000000000000000000000e592427a0aece92de3edee1f18e0157c058615640000000000000000000000006b175474e89094c44da98b954eedeac495271d0f000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000bcca60bb61934080951369a648fb03df4f96263c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000e06d76d72db4a9763592f4ae741c662edbe8902c00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000bcca60bb61934080951369a648fb03df4f96263c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002",
        gasLimit: "0xffffff",
    };    
    await wallet.sendTransaction(tx);
    console.log((await ADAI.balanceOf(wallet.address)).toString());

    return;
}


test()